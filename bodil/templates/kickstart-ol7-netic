install
url --url="{{ repo_url }}"
lang en_US.UTF-8
keyboard dk
network --activate --onboot yes --device link --bootproto dhcp --noipv6 --hostname {{ name }}
rootpw manager
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc Europe/Copenhagen
services --enabled network,sshd
bootloader --location=mbr --boot-drive=sda --append="selinux=1 audit=1"
cmdline
skipx

# Partitioning
zerombr
clearpart --all --initlabel
part /boot --fstype ext3 --size=512 --ondisk=sda
part pv.01 --size=2048 --grow --ondisk=sda
volgroup rootdisk pv.01
logvol swap --name=swap --vgname=rootdisk --fstype=swap --size=1024
logvol /var --name=var --vgname=rootdisk --fstype=ext3 --size=3584
logvol /tmp --name=tmp --vgname=rootdisk --fstype=ext3 --size=1024 --fsoptions="nodev,noexec,nosuid"
logvol /home --name=home --vgname=rootdisk --fstype=ext3 --size=1024 --fsoptions="nodev"
logvol / --name=root --vgname=rootdisk  --fstype=ext3  --size=1024 --grow

# /pack
part pv.02 --size=500 --grow --ondisk=sdb
volgroup vg00 pv.02
logvol /pack --name=pack --vgname=vg00 --fstype=ext3 --size=500 --grow


firstboot --disabled
firewall --disabled
reboot

%packages
@core
open-vm-tools

# Useful sysadm tools
screen
unzip
bzip2
bind-utils
lsof
net-tools
telnet
nmap-ncat
rsync
policycoreutils-python
sysstat
vim
krb5-workstation
keyutils

# Debugging tools
strace
dstat
iotop
tcpdump

# Needed for compatibility
glibc.i686
compat-libstdc++-33

# No soundcard
-alsa-*
# No Adaptec sequencer...
-aic94xx-firmware*
# No Intel WIFI
-iwl*firmware
# No Marvell Network Adapter
-libertas*
# No Hauppauge PVR
-ivtv*
# No weird IBM storage
-iprutils
# We control network config
-NetworkManager*
# No WIFI
-wpa_supplicant
# No splash screen
-plymouth*
# No RHN
-rhnsd
# No local firewall
-firewalld
# Udev helper for naming devices per BIOS names
-biosdevname
# Not using brtfs
-btrfs-progs*
# Not using maridb
-mariadb-libs
%end

%post --log=/root/ks-post.log

# disable rhnsd
chkconfig rhnsd off

# Add a deployment user which must be deleted after deployment
# Set to expire tomorrow to be on the safe side
SECRET='$6$pslNmDKw8zGizCez$3C0jg5YeRZY5baFXER.Xb9PWS2yO/8VG4dpcS3rRuLV8xlKIkRxIaQEkGvgzUG/5WeZgL2F0Lf0iQOWgBWEhO.'
useradd -c "Deployment user" -m -s /bin/bash -p deploy -e `date +"%Y-%m-%d" --date tomorrow` -p "$SECRET" deploy

# Make deploy user allmighty during deployment
echo 'deploy ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

# Disable requiretty in sudoers (required for ansible)
sed -i 's/Defaults.*requiretty/#Defaults requiretty/g' /etc/sudoers

FSTAB=/etc/fstab
# nodev, noexec, and nosuid on /dev/shm
TEST="`grep ' \/dev\/shm ' ${FSTAB} | grep -c 'noexec'`"
if [ "$TEST" = "0" ]; then
        MNT_OPTS=$(grep " \/dev\/shm " ${FSTAB} | awk '{print $4}')
        sed -i "s/\( \/dev\/shm.*${MNT_OPTS}\)/\1,nodev,noexec,nosuid/" ${FSTAB}
fi

# bindmount /var/tmp to /tmp
grep " \/var\/tmp " ${FSTAB} >/dev/null
if [ $? -eq 1 ]; then
        echo -e "/tmp\t\t/var/tmp\t\t\text3\tdefaults,bind,nodev,noexec,nosuid\t0 0" >> ${FSTAB}
fi

%end
